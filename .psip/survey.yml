survey:
   name: My Survey
   description: Custom Productivity and Improvement Planning survey

   scores:
    - name: None
      boost: Can you do better?
      value: 0
      color: "#000000"
    - name: Basic
      boost: Good start!
      value: 33
      color: "#DC267F"
    - name: Intermediate
      boost: Keep up the good work!
      value: 66
      color: "#FFB000"
    - name: Advanced
      boost: Awesome!
      value: 100
      color: "#066999"
    
   categories:
    - name: Originality
      path: originality
      description: The extent to which the software project makes an important and innovative contribution to understanding and knowledge in the field.  

      items:
       - name: Novelty
         path: novelty
         description: How would you rate the novelty of the algorithm?
         questions:
          - None/Unknown
          - Incremental
          - Breakthrough
          - Transformative
       - name: Impact
         path: impact
         description: How would you rate the impact on research methods?
         questions: 
          - None/Unknown
          - Incremental
          - Breakthrough
          - Transformative
       - name: Originality
         path: originality
         description: How would you rate the originality of the solution?
         questions:
          - None/Unknown
          - Incremental
          - Breakthrough
          - Transformative
       - name: Engagement
         path: engagement
         description: How would you rate the engagement with forms or scales of data?
         questions:
          - None/Unknown
          - Incremental
          - Breakthrough
          - Transformative
       - name: Improvement
         path: improvement
         description: How would you rate the improvement in the scale, resolution, or accuracy at which research can be performed?
         questions:
          - None/Unknown
          - Incremental
          - Breakthrough
          - Transformative
       - name: Intellectual Property
         path: intellectual_property
         description: Is the software covered by any patents? How many?
         questions:
          - Unknown
          - No patents
          - One patent
          - Two or more patents

    - name: Better Planning
      path: planning
      description: Improving strategies for planning in order to increase software productivity, quality, and sustainability, while underscoring the 
       unique characteristics of scientific software, including that requirements often change during discovery.
      items:
       - name: Development Process
         path: development_process
         description: The software development life cycle is the process of dividing software development work into distinct phases to improve design, product management, and project management.
         questions:
          - Not currently being used
          - Has development process but it is based on ad-hoc rules
          - Employs a basic iterative development process
          - Follows a responsive, flexible development methodology (e.g. Agile)

       - name: Contribution Management
         path: contribution_management
         description: Tracking and managing contributions to software.
         questions:
          - Not currently being used
          - Guidelines for accepting contributions
          - Clearly defined standards for coding and documentation, including community standards
          - Provenance and license checking for contributions

       - name: Requirements Analysis
         path: requirements_analysis
         description: Statements about what functions a software product should perform, including any constraints under which it should operate but 
          avoiding as much as possible implementation details.
         questions:
          - Not currently being used
          - Development guidelines include requirements gathering
          - Formal requirements gathering is undertaken as part of the project
          - Formally tracked and documented through a requirements management system

       - name: Software Design
         path: software_design
         description: Major considerations in designing software to meet its scientific objectives and sustainability goals. 
          Software design usually follows from requirements specification, and involves problem solving and planning a software solution.
         questions:
          - Not currently being used
          - Development guidelines include design in the process
          - A modeling language is employed for key aspects of the project
          - Visual modeling using a graphical representation to capture design

       - name: Onboarding
         path: onboarding
         description: The process of integrating a new employee into an organization or a new team member into a team.
         questions:
          - Not currently being used
          - Consistent onboarding process is followed
          - Minimally documented onboarding process
          - Fully documented onboarding process is used for all personnel changes

       - name: Offboarding
         path: offboarding
         description: The process of transferring employee knowledge to the broader team or organization.
         questions:
          - Not currently being used
          - Consistent offboarding process is followed
          - Minimally documented offboarding process
          - Fully documented offboarding process is used for all personnel changes

    - name: Better Performance
      path: performance
      description: Improving strategies for writing scientific software that is efficient, scalable, and portable—from laptops to emerging extreme-scale 
       architectures—while preserving other code quality metrics such as correctness and usability.

      items:
       - name: Performance Testing
         path: performance_testing
         description: Determining the speed, scalability, reliability, and stability of an application under a variety of workloads.
         questions:
          - Not currently being used
          - Conducts performance tests
          - Automated performance tests are run regularly
          - Uses performance profiling tools to guide performance-related improvements
      
       - name: Performance Regression Testing
         path: performance_regression_testing
         description: Undertaking testing that exercises performance capabilities combined with plans for how to make practical use of 
          that performance data
         questions:
          - Not currently being used
          - A testable primary use case and set of measurements are established
          - The performance history of the tests are tracked over time
          - Performance tracking is run and reviewed at regular intervals on relevant platforms 
      
       - name: Performance Portability
         path: performance_portability
         description: Software exhibiting similar performance across multiple platforms, with the time to solution 
          reflecting efficient utilization of computational resources on each platform. 
         questions:
          - Not currently being used
          - Utilize a standard parallel programming model (e.g. MPI)
          - Utilize a programming model designed for portability (e.g. OpenACC, OpenMP)
          - Re-writing the application to utilize an advanced portability library (e.g. Kokkos)
        
    - name: Better Reliability
      path: reliability
      description: Improving methods of testing and verification to ensure that software is robust and produces reliable results, thereby 
       helping to ensure the integrity of research and enable collaboration across teams.

      items:
       - name: Testing
         path: testing
         description: The process of ensuring that a software product is meeting its requirements at each stage of development, delivery, and deployment. 
          Testing helps to avoid defects and verify correctness.
         questions:
          - Not currently being used
          - Comparison used to create system-level no-change tests
          - Unit testing for refactored and new code
          - Continuous integration

       - name: Reproducibility
         path: reproducibility
         description: Any effort whose goal is to increase trustworthiness and reuse of computational capabilities and results and to ensure correctness.
         questions:
          - Not currently being used
          - Publication of code
          - Inclusion of data when code is published
          - The entire provenance of the application and its execution environment is published

    - name: Better Collaboration
      path: collaboration
      description: Improving ways to facilitate work across teams and to promote partnerships and community contributions via software. 
        We consider projects of all sizes, from small teams through multi-institutional aggregate teams.
      items:
       - name: Virtual Tools
         path: virtual_tools
         description: The process of documenting and sharing team products and artifacts with virtual tools (e.g. Jira, Google Docs) to
          communicate goals, objectives.
         questions:
          - Not currently being used
          - Used occasionally
          - Used on a regualar basis in order to improve processes
          - Used strategically to facilitate asynchronous and synchronous communication in order to build trust through transparency

       - name: Telecommuting Communication Practices
         path: telecommuting_communication_practices
         description: The use of video and audio conferencing technology for co-located, hybrid (co-located + remote), or distributed teams.
         questions:
          - Not currently being used
          - Audio conferencing and/or video conferencing tools for audio only or occasional video use
          - Use of video conferencing with defined inclusivity guidelines
          - Team awareness of inclusive practices in the use of video conferencing combined with utlizing advanced communication features (e.g. voting, sketch pads)
